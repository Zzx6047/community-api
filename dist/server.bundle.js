!function(Q){var U={};function F(B){if(U[B])return U[B].exports;var n=U[B]={i:B,l:!1,exports:{}};return Q[B].call(n.exports,n,n.exports,F),n.l=!0,n.exports}F.m=Q,F.c=U,F.d=function(Q,U,B){F.o(Q,U)||Object.defineProperty(Q,U,{enumerable:!0,get:B})},F.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},F.t=function(Q,U){if(1&U&&(Q=F(Q)),8&U)return Q;if(4&U&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var B=Object.create(null);if(F.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:Q}),2&U&&"string"!=typeof Q)for(var n in Q)F.d(B,n,function(U){return Q[U]}.bind(null,n));return B},F.n=function(Q){var U=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return F.d(U,"a",U),U},F.o=function(Q,U){return Object.prototype.hasOwnProperty.call(Q,U)},F.p="",F(F.s=23)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("const DB_URL = 'mongodb://121.36.140.182:27017/testdb';\nconst REDIS = {\n  host: '121.36.140.182',\n  port: 6379 // password: ''\n\n};\nconst JWT_SECRET = 'a&*38QthAKuiRwISGLotgq^3%^$zvA3A6Hfr8MF$jM*HY4*dWcwAW&9NGp7*b53!';\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  DB_URL,\n  REDIS,\n  JWT_SECRET\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL2luZGV4LmpzP2YxMjEiXSwibmFtZXMiOlsiREJfVVJMIiwiUkVESVMiLCJob3N0IiwicG9ydCIsIkpXVF9TRUNSRVQiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE1BQU0sR0FBRyx1Q0FBZjtBQUNBLE1BQU1DLEtBQUssR0FBRztBQUNaQyxNQUFJLEVBQUUsZ0JBRE07QUFFWkMsTUFBSSxFQUFFLElBRk0sQ0FHWjs7QUFIWSxDQUFkO0FBS0EsTUFBTUMsVUFBVSxHQUFHLGtFQUFuQjtBQUVlO0FBQ2JKLFFBRGE7QUFFYkMsT0FGYTtBQUdiRztBQUhhLENBQWYiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IERCX1VSTCA9ICdtb25nb2RiOi8vMTIxLjM2LjE0MC4xODI6MjcwMTcvdGVzdGRiJ1xyXG5jb25zdCBSRURJUyA9IHtcclxuICBob3N0OiAnMTIxLjM2LjE0MC4xODInLFxyXG4gIHBvcnQ6IDYzNzksXHJcbiAgLy8gcGFzc3dvcmQ6ICcnXHJcbn1cclxuY29uc3QgSldUX1NFQ1JFVCA9ICdhJiozOFF0aEFLdWlSd0lTR0xvdGdxXjMlXiR6dkEzQTZIZnI4TUYkak0qSFk0KmRXY3dBVyY5TkdwNypiNTMhJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIERCX1VSTCxcclxuICBSRURJUyxcclxuICBKV1RfU0VDUkVUXHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n")},function(module,exports){eval('module.exports = require("dayjs");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJkYXlqc1wiPzNhYTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImRheWpzXCIpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n')},function(module,exports){eval('module.exports = require("koa-router");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJrb2Etcm91dGVyXCI/MDM1ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwia29hLXJvdXRlclwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n')},function(module,exports){eval('module.exports = require("mongoose");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJtb25nb29zZVwiP2ZmZDciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n')},function(module,exports){eval('module.exports = require("redis");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWRpc1wiPzcwNmMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlZGlzXCIpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n')},function(module,exports){eval('module.exports = require("bcryptjs");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJiY3J5cHRqc1wiP2NlNTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImJjcnlwdGpzXCIpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5\n')},function(module,exports){eval('module.exports = require("koa");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJrb2FcIj9lZWI5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJrb2FcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6\n')},function(module,exports){eval('module.exports = require("koa-jwt");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJrb2Etand0XCI/ZWIwZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwia29hLWp3dFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7\n')},function(module,exports){eval('module.exports = require("path");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJwYXRoXCI/NzRiYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicGF0aFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n')},function(module,exports){eval('module.exports = require("koa-helmet");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJrb2EtaGVsbWV0XCI/NDJkMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI5LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwia29hLWhlbG1ldFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9\n')},function(module,exports){eval('module.exports = require("koa-static");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJrb2Etc3RhdGljXCI/OWE0YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImtvYS1zdGF0aWNcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///10\n')},function(module,exports){eval('module.exports = require("koa-combine-routers");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJrb2EtY29tYmluZS1yb3V0ZXJzXCI/MmM3NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIxMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImtvYS1jb21iaW5lLXJvdXRlcnNcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///11\n')},function(module,exports){eval('module.exports = require("svg-captcha");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJzdmctY2FwdGNoYVwiP2NjNjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJzdmctY2FwdGNoYVwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///12\n')},function(module,exports){eval('module.exports = require("bluebird");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJibHVlYmlyZFwiPzJjNmIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJibHVlYmlyZFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///13\n')},function(module,exports){eval('module.exports = require("nodemailer");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJub2RlbWFpbGVyXCI/M2Q1NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIxNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIm5vZGVtYWlsZXJcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///14\n')},function(module,exports){eval('module.exports = require("jsonwebtoken");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJqc29ud2VidG9rZW5cIj82NDkwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjE1LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwianNvbndlYnRva2VuXCIpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///15\n')},function(module,exports){eval('module.exports = require("koa-body");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJrb2EtYm9keVwiPzNmNjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJrb2EtYm9keVwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///16\n')},function(module,exports){eval('module.exports = require("koa-json");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJrb2EtanNvblwiPzY1MjgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJrb2EtanNvblwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///17\n')},function(module,exports){eval('module.exports = require("@koa/cors");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJAa29hL2NvcnNcIj9hNjk1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjE4LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiQGtvYS9jb3JzXCIpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///18\n')},function(module,exports){eval('module.exports = require("koa-compose");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJrb2EtY29tcG9zZVwiPzczMTciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJrb2EtY29tcG9zZVwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///19\n')},function(module,exports){eval('module.exports = require("koa-compress");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJrb2EtY29tcHJlc3NcIj9hNmY2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwia29hLWNvbXByZXNzXCIpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///20\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony default export */ __webpack_exports__[\"a\"] = ((ctx, next) => {\n  return next().catch(err => {\n    if (401 == err.status) {\n      ctx.status = 401;\n      ctx.body = {\n        code: 401,\n        msg: 'Protected resource, use Authorization header to get access\\n'\n      };\n    } else {\n      // debugger\n      ctx.status = err.status || 500;\n      ctx.body = Object.assign({\n        code: 500,\n        msg: err.message\n      },  true ? {\n        stack: err.stack\n      } : undefined); // console.log(err.stack);\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tbW9uL0Vycm9ySGFuZGxlLmpzPzQxZWIiXSwibmFtZXMiOlsiY3R4IiwibmV4dCIsImNhdGNoIiwiZXJyIiwic3RhdHVzIiwiYm9keSIsImNvZGUiLCJtc2ciLCJPYmplY3QiLCJhc3NpZ24iLCJtZXNzYWdlIiwicHJvY2VzcyIsInN0YWNrIl0sIm1hcHBpbmdzIjoiQUFBZSwwREFBQ0EsR0FBRCxFQUFNQyxJQUFOLEtBQWU7QUFDNUIsU0FBT0EsSUFBSSxHQUFHQyxLQUFQLENBQWNDLEdBQUQsSUFBUztBQUMzQixRQUFJLE9BQU9BLEdBQUcsQ0FBQ0MsTUFBZixFQUF1QjtBQUNyQkosU0FBRyxDQUFDSSxNQUFKLEdBQWEsR0FBYjtBQUNBSixTQUFHLENBQUNLLElBQUosR0FBVztBQUNUQyxZQUFJLEVBQUUsR0FERztBQUVUQyxXQUFHLEVBQUU7QUFGSSxPQUFYO0FBSUQsS0FORCxNQU1PO0FBQ0w7QUFDQVAsU0FBRyxDQUFDSSxNQUFKLEdBQWFELEdBQUcsQ0FBQ0MsTUFBSixJQUFjLEdBQTNCO0FBQ0FKLFNBQUcsQ0FBQ0ssSUFBSixHQUFXRyxNQUFNLENBQUNDLE1BQVAsQ0FBYztBQUN2QkgsWUFBSSxFQUFFLEdBRGlCO0FBRXZCQyxXQUFHLEVBQUVKLEdBQUcsQ0FBQ087QUFGYyxPQUFkLEVBR1JDLEtBQUEsR0FDRDtBQUFFQyxhQUFLLEVBQUVULEdBQUcsQ0FBQ1M7QUFBYixPQURDLEdBQ3NCLFNBSmQsQ0FBWCxDQUhLLENBUUw7QUFDRDtBQUNGLEdBakJNLENBQVA7QUFrQkQsQ0FuQkQiLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAoY3R4LCBuZXh0KSA9PiB7XHJcbiAgcmV0dXJuIG5leHQoKS5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICBpZiAoNDAxID09IGVyci5zdGF0dXMpIHtcclxuICAgICAgY3R4LnN0YXR1cyA9IDQwMTtcclxuICAgICAgY3R4LmJvZHkgPSB7XHJcbiAgICAgICAgY29kZTogNDAxLFxyXG4gICAgICAgIG1zZzogJ1Byb3RlY3RlZCByZXNvdXJjZSwgdXNlIEF1dGhvcml6YXRpb24gaGVhZGVyIHRvIGdldCBhY2Nlc3NcXG4nXHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIGRlYnVnZ2VyXHJcbiAgICAgIGN0eC5zdGF0dXMgPSBlcnIuc3RhdHVzIHx8IDUwMFxyXG4gICAgICBjdHguYm9keSA9IE9iamVjdC5hc3NpZ24oe1xyXG4gICAgICAgIGNvZGU6IDUwMCxcclxuICAgICAgICBtc2c6IGVyci5tZXNzYWdlLFxyXG4gICAgICB9LCBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JyA/XHJcbiAgICAgICAgeyBzdGFjazogZXJyLnN0YWNrIH0gOiB7fSlcclxuICAgICAgLy8gY29uc29sZS5sb2coZXJyLnN0YWNrKTtcclxuICAgIH1cclxuICB9KTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///21\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// EXTERNAL MODULE: external \"koa-combine-routers\"\nvar external_koa_combine_routers_ = __webpack_require__(11);\nvar external_koa_combine_routers_default = /*#__PURE__*/__webpack_require__.n(external_koa_combine_routers_);\n\n// EXTERNAL MODULE: external \"koa-router\"\nvar external_koa_router_ = __webpack_require__(2);\nvar external_koa_router_default = /*#__PURE__*/__webpack_require__.n(external_koa_router_);\n\n// EXTERNAL MODULE: external \"svg-captcha\"\nvar external_svg_captcha_ = __webpack_require__(12);\nvar external_svg_captcha_default = /*#__PURE__*/__webpack_require__.n(external_svg_captcha_);\n\n// EXTERNAL MODULE: external \"redis\"\nvar external_redis_ = __webpack_require__(4);\nvar external_redis_default = /*#__PURE__*/__webpack_require__.n(external_redis_);\n\n// EXTERNAL MODULE: external \"bluebird\"\nvar external_bluebird_ = __webpack_require__(13);\n\n// EXTERNAL MODULE: ./src/config/index.js\nvar config = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/config/RedisConfig.js\n\n\n\nconst RedisConfig_options = {\n  host: config[\"a\" /* default */].REDIS.host,\n  port: config[\"a\" /* default */].REDIS.port,\n  password: config[\"a\" /* default */].REDIS.password,\n  detect_buffers: true,\n  retry_strategy: function (options) {\n    if (options.error && options.error.code === 'ECONNREFUSED') {\n      // End reconnecting on a specific error and flush all commands with\n      // a individual error\n      return new Error('The server refused the connection');\n    }\n\n    if (options.total_retry_time > 1000 * 60 * 60) {\n      // End reconnecting after a specific timeout and flush all commands\n      // with a individual error\n      return new Error('Retry time exhausted');\n    }\n\n    if (options.attempt > 10) {\n      // End reconnecting with built in error\n      return undefined;\n    } // reconnect after\n\n\n    return Math.min(options.attempt * 100, 3000);\n  }\n}; // const client = redis.createClient(options)\n\nconst client = Object(external_bluebird_[\"promisifyAll\"])(external_redis_default.a.createClient(RedisConfig_options));\nclient.on('error', err => {\n  console.log('Redis Client Error:' + err);\n});\n\nconst setValue = (key, value, time) => {\n  if (typeof value === 'undefined' || value == null || value === '') {\n    return;\n  }\n\n  if (typeof value === 'string') {\n    if (typeof time !== 'undefined') {\n      client.set(key, value, 'EX', time);\n    } else {\n      client.set(key, value);\n    }\n  } else if (typeof value === 'object') {\n    // { key1: value1, key2: value2}\n    // Object.keys(value) => [key1, key2]\n    Object.keys(value).forEach(item => {\n      client.hset(key, item, value[item], external_redis_default.a.print);\n    });\n  }\n}; // const {promisify} = require('util');\n// const getAsync = promisify(client.get).bind(client);\n\n\nconst getValue = key => {\n  return client.getAsync(key);\n};\n\nconst getHValue = key => {\n  // v8 Promisify method use util, must node > 8\n  // return promisify(client.hgetall).bind(client)(key)\n  // bluebird async\n  return client.hgetallAsync(key);\n};\n\nconst delValue = key => {\n  client.del(key, (err, res) => {\n    if (res === 1) {\n      console.log('delete successfully');\n    } else {\n      console.log('delete redis key error:' + err);\n    }\n  });\n};\n\n\n// CONCATENATED MODULE: ./src/api/PublicController.js\n\n\n\nclass PublicController_PublicController {\n  constructor() {}\n\n  async getCaptcha(ctx) {\n    const body = ctx.request.query;\n    const newCaptca = external_svg_captcha_default.a.create({\n      size: 4,\n      ignoreChars: '0o1il',\n      color: true,\n      noise: Math.floor(Math.random() * 5),\n      width: 150,\n      height: 38\n    }); // 保存图片验证码数据，设置超时时间，单位: s\n    // 设置图片验证码超时10分钟\n\n    setValue(body.sid, newCaptca.text, 10 * 60);\n    ctx.body = {\n      code: 200,\n      data: newCaptca.data\n    };\n  }\n\n}\n\n/* harmony default export */ var api_PublicController = (new PublicController_PublicController());\n// EXTERNAL MODULE: external \"mongoose\"\nvar external_mongoose_ = __webpack_require__(3);\nvar external_mongoose_default = /*#__PURE__*/__webpack_require__.n(external_mongoose_);\n\n// CONCATENATED MODULE: ./src/config/DBHelpler.js\n\n // 创建连接\n\nexternal_mongoose_default.a.connect(config[\"a\" /* default */].DB_URL, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}); // 连接成功\n\nexternal_mongoose_default.a.connection.on('connected', () => {\n  console.log('Mongoose connection open to ' + config[\"a\" /* default */].DB_URL);\n}); // 连接异常\n\nexternal_mongoose_default.a.connection.on('error', err => {\n  console.log('Mongoose connection error: ' + err);\n}); // 断开连接\n\nexternal_mongoose_default.a.connection.on('disconnected', () => {\n  console.log('Mongoose connection disconnected');\n});\n/* harmony default export */ var DBHelpler = (external_mongoose_default.a);\n// EXTERNAL MODULE: external \"dayjs\"\nvar external_dayjs_ = __webpack_require__(1);\nvar external_dayjs_default = /*#__PURE__*/__webpack_require__.n(external_dayjs_);\n\n// CONCATENATED MODULE: ./src/model/Post.js\n\n\nconst Schema = DBHelpler.Schema;\nconst PostSchema = new Schema({\n  uid: {\n    type: String,\n    ref: 'users'\n  },\n  title: {\n    type: String\n  },\n  content: {\n    type: String\n  },\n  created: {\n    type: Date\n  },\n  catalog: {\n    type: String\n  },\n  fav: {\n    type: String\n  },\n  isEnd: {\n    type: String\n  },\n  reads: {\n    type: Number\n  },\n  answer: {\n    type: Number\n  },\n  status: {\n    type: String\n  },\n  isTop: {\n    type: String\n  },\n  sort: {\n    type: String\n  },\n  tags: {\n    type: String\n  }\n});\nPostSchema.pre('save', function (next) {\n  this.created = external_dayjs_default()().format('YYYY-MM-DD HH:mm:ss');\n  next();\n});\nPostSchema.statics = {\n  /**\r\n   * \r\n   * @param {Object} options 筛选条件 \r\n   * @param {String} sort 排序方式\r\n   * @param {Number} page 分页页数\r\n   * @param {Number} limit 分页条数\r\n   */\n  getList: function (options, sort, page, limit) {\n    return this.find(options).sort({\n      [sort]: -1\n    }).skip(page * limit).limit(limit).populate({\n      path: 'uid',\n      select: 'name'\n    });\n  },\n  getTopWeek: function () {\n    return this.find({\n      \"created\": {\n        $gte: external_dayjs_default()().subtract(7, 'days')\n      }\n    }, {\n      answer: 1,\n      title: 1\n    }).sort({\n      answer: -1\n    }).limit(15);\n  }\n};\nconst PostModel = DBHelpler.model('post', PostSchema);\n/* harmony default export */ var Post = (PostModel);\n// CONCATENATED MODULE: ./src/model/Links.js\n\n\nconst Links_Schema = DBHelpler.Schema;\nconst LinksSchema = new Links_Schema({\n  title: {\n    type: String,\n    default: ''\n  },\n  link: {\n    type: String,\n    default: ''\n  },\n  type: {\n    type: String,\n    default: 'link'\n  },\n  created: {\n    type: Date\n  },\n  isTop: {\n    type: String,\n    default: ''\n  },\n  sort: {\n    type: String,\n    default: ''\n  }\n});\nLinksSchema.pre('save', function (next) {\n  this.created = external_dayjs_default()().format('YYYY-MM-DD HH:mm:ss');\n  next();\n});\nconst Links = DBHelpler.model('links', LinksSchema);\n/* harmony default export */ var model_Links = (Links);\n// CONCATENATED MODULE: ./src/api/ContentController.js\n\n\n\nclass ContentController_ContentController {\n  async getPostList(ctx) {\n    const body = ctx.query; // const post = new Post({\n    //     title: 'test title',\n    //     content: 'test content',\n    //     catalog: 'ask',\n    //     fav: 20,\n    //     isEnd: '0',\n    //     reads: '0',\n    //     answer: '0',\n    //     status: '0',\n    //     isTop: '0',\n    //     sort: '0',\n    //     tags: [{\n    //         name: '精华',\n    //         class: ''\n    //     }]\n    // })\n    // const tmp = await post.save()\n    // console.log('保存成功');\n    // console.log(tmp)\n\n    const sort = body.sort ? body.sort : 'created';\n    const page = body.page ? parseInt(body.page) : 0;\n    const limit = body.limit ? parseInt(body.limit) : 20;\n    let options = {};\n\n    if (typeof body.catalog !== 'undefined' && body.catalog !== '') {\n      options.catalog = body.catalog;\n    }\n\n    if (typeof body.isTop !== 'undefined') {\n      options.isTop = body.isTop;\n    }\n\n    if (typeof body.status !== 'undefined') {\n      options.status = body.status;\n    }\n\n    if (typeof body.isEnd !== 'undefined') {\n      options.isEnd = body.isEnd;\n    }\n\n    if (typeof body.tag !== 'undefined' && body.tag !== '') {\n      options.tags = {\n        $elemMatch: {\n          name: body.tag\n        }\n      };\n    }\n\n    const result = await Post.getList(options, sort, page, limit);\n    ctx.body = {\n      code: 200,\n      data: result,\n      msg: '获取文章列表成功'\n    };\n  } //查询友链\n\n\n  async getLinks(ctx) {\n    const result = await model_Links.find({\n      type: 'links'\n    });\n    ctx.body = {\n      code: 200,\n      data: result\n    };\n  } //查询温馨提醒\n\n\n  async getTips(ctx) {\n    const result = await model_Links.find({\n      type: 'tips'\n    });\n    ctx.body = {\n      code: 200,\n      data: result\n    };\n  } // 本周热议\n\n\n  async getTopWeek(ctx) {\n    const result = await Post.getTopWeek();\n    ctx.body = {\n      code: 200,\n      data: result\n    };\n  }\n\n}\n\n/* harmony default export */ var api_ContentController = (new ContentController_ContentController());\n// CONCATENATED MODULE: ./src/routes/publicRouter.js\n\n\n\nconst router = new external_koa_router_default.a();\nrouter.prefix('/public'); // 获取图片验证码\n\nrouter.get('/getCaptcha', api_PublicController.getCaptcha); // 获取文章列表\n\nrouter.get('/list', api_ContentController.getPostList); // 温馨提醒\n\nrouter.get('/tips', api_ContentController.getTips); // 友情链接\n\nrouter.get('/links', api_ContentController.getLinks); // 回复周榜\n\nrouter.get('/topWeek', api_ContentController.getTopWeek);\n/* harmony default export */ var publicRouter = (router);\n// EXTERNAL MODULE: external \"nodemailer\"\nvar external_nodemailer_ = __webpack_require__(14);\nvar external_nodemailer_default = /*#__PURE__*/__webpack_require__.n(external_nodemailer_);\n\n// CONCATENATED MODULE: ./src/config/MailConfig.js\n // async..await is not allowed in global scope, must use a wrapper\n\nasync function send(sendInfo) {\n  // Generate test SMTP service account from ethereal.email\n  // Only needed if you don't have a real mail account for testing\n  // let testAccount = await nodemailer.createTestAccount()\n  // create reusable transporter object using the default SMTP transport\n  let transporter = external_nodemailer_default.a.createTransport({\n    host: 'smtp.qq.com',\n    port: 587,\n    secure: false,\n    // true for 465, false for other ports\n    auth: {\n      user: 'imoocbrian@qq.com',\n      // generated ethereal user\n      pass: 'rbkcbxwrurygjfca' // generated ethereal password\n\n    }\n  }); // let sendInfo = {\n  //   code: '1234',\n  //   expire: '2019-10-01',\n  //   email: 'imoocbrian@qq.com',\n  //   user: 'Brian',\n  // }\n\n  let url = 'http://www.imooc.com'; // send mail with defined transport object\n\n  let info = await transporter.sendMail({\n    from: '\"认证邮件\" <imoocbrian@qq.com>',\n    // sender address\n    to: sendInfo.email,\n    // list of receivers\n    subject: sendInfo.user !== '' ? `你好开发者，${sendInfo.user}！《慕课网前端全栈实践》注册码` : '《慕课网前端全栈实践》注册码',\n    // Subject line\n    text: `您在《慕课网前端全栈实践》课程中注册，您的邀请码是${sendInfo.code},邀请码的过期时间: ${sendInfo.expire}`,\n    // plain text body\n    html: `\n        <div style=\"border: 1px solid #dcdcdc;color: #676767;width: 600px; margin: 0 auto; padding-bottom: 50px;position: relative;\">\n        <div style=\"height: 60px; background: #393d49; line-height: 60px; color: #58a36f; font-size: 18px;padding-left: 10px;\">Imooc社区——欢迎来到官方社区</div>\n        <div style=\"padding: 25px\">\n          <div>您好，${sendInfo.user}童鞋，重置链接有效时间30分钟，请在${sendInfo.expire}之前重置您的密码：</div>\n          <a href=\"${url}\" style=\"padding: 10px 20px; color: #fff; background: #009e94; display: inline-block;margin: 15px 0;\">立即重置密码</a>\n          <div style=\"padding: 5px; background: #f2f2f2;\">如果该邮件不是由你本人操作，请勿进行激活！否则你的邮箱将会被他人绑定。</div>\n        </div>\n        <div style=\"background: #fafafa; color: #b4b4b4;text-align: center; line-height: 45px; height: 45px; position: absolute; left: 0; bottom: 0;width: 100%;\">系统邮件，请勿直接回复</div>\n    </div>\n    ` // html body\n\n  });\n  return 'Message sent: %s', info.messageId; // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\n  // Preview only available when sending through an Ethereal account\n  // console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info))\n  // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n} // main().catch(console.error)\n\n\n/* harmony default export */ var MailConfig = (send);\n// EXTERNAL MODULE: external \"bcryptjs\"\nvar external_bcryptjs_ = __webpack_require__(5);\nvar external_bcryptjs_default = /*#__PURE__*/__webpack_require__.n(external_bcryptjs_);\n\n// EXTERNAL MODULE: external \"jsonwebtoken\"\nvar external_jsonwebtoken_ = __webpack_require__(15);\nvar external_jsonwebtoken_default = /*#__PURE__*/__webpack_require__.n(external_jsonwebtoken_);\n\n// CONCATENATED MODULE: ./src/common/Utils.js\n\n\n\n\nconst getJWTPayload = token => {\n  return external_jsonwebtoken_default.a.verity(token.split(' ')[1], config[\"a\" /* default */].JWT_SECRET);\n};\n\nconst checkCode = async (key, value) => {\n  const redisData = await getValue(key);\n\n  if (redisData != null) {\n    if (redisData.toLowerCase() === value.toLowerCase()) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n};\n\n\n// CONCATENATED MODULE: ./src/model/User.js\n\nconst User_Schema = DBHelpler.Schema;\nconst UserSchema = new User_Schema({\n  'username': {\n    type: String\n  },\n  'password': {\n    type: String\n  }\n});\nconst UserModel = DBHelpler.model('users', UserSchema);\n/* harmony default export */ var User = (UserModel);\n// CONCATENATED MODULE: ./src/api/LoginController.js\n\n\n\n\n\n\n\n\nclass LoginController_LoginController {\n  constructor() {}\n\n  async forget(ctx) {\n    const {\n      body\n    } = ctx.request;\n    console.log(body);\n\n    try {\n      // body.username -> database -> email\n      let result = await MailConfig({\n        code: '1234',\n        expire: external_dayjs_default()().add(30, 'minutes').format('YYYY-MM-DD HH:mm:ss'),\n        email: body.username,\n        user: 'Brian'\n      });\n      ctx.body = {\n        code: 200,\n        data: result,\n        msg: '邮件发送成功'\n      };\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async login(ctx) {\n    // debugger\n    // 接收用户的数据\n    // 返回token\n    const {\n      body\n    } = ctx.request;\n    let sid = body.sid;\n    let code = body.code; // 验证图片验证码的时效性、正确性\n\n    let result = await checkCode(sid, code);\n\n    if (result) {\n      // 验证用户账号密码是否正确\n      let checkUserPasswd = false;\n      let user = await User.findOne({\n        username: body.username\n      });\n\n      if (await external_bcryptjs_default.a.compare(body.password, user.password)) {\n        checkUserPasswd = true;\n      } // mongoDB查库\n\n\n      if (checkUserPasswd) {\n        // 验证通过，返回Token数据\n        const userObj = user.toJson();\n        const arr = ['password', 'username', 'roles'];\n        arr.map(item => {\n          delete userObj[item];\n        });\n        let token = external_jsonwebtoken_default.a.sign({\n          _id: userObj._id\n        }, config[\"a\" /* default */].JWT_SECRET, {\n          expiresIn: '1d'\n        });\n        ctx.body = {\n          code: 200,\n          data: userObj,\n          token: token\n        };\n      } else {\n        // 用户名 密码验证失败，返回提示\n        ctx.body = {\n          code: 404,\n          msg: '用户名或者密码错误'\n        };\n      }\n    } else {\n      // 图片验证码校验失败\n      ctx.body = {\n        code: 401,\n        msg: '图片验证码不正确,请检查！'\n      };\n    }\n  }\n\n  async reg(ctx) {\n    // 接收客户端的数据\n    const {\n      body\n    } = ctx.request; // 校验验证码的内容（时效性、有效性）\n\n    let sid = body.sid;\n    let code = body.code;\n    let msg = {}; // 验证图片验证码的时效性、正确性\n\n    let result = await checkCode(sid, code);\n    let check = true;\n\n    if (result) {\n      // 查库，看username是否被注册\n      let user1 = await User.findOne({\n        username: body.username\n      });\n\n      if (user1 !== null && typeof user1.username !== 'undefined') {\n        msg.username = ['此邮箱已经注册，可以通过邮箱找回密码'];\n        check = false;\n      }\n\n      let user2 = await User.findOne({\n        name: body.name\n      }); // 查库，看name是否被注册\n\n      if (user2 !== null && typeof user2.name !== 'undefined') {\n        msg.name = ['此昵称已经被注册，请修改'];\n        check = false;\n      } // 写入数据到数据库\n\n\n      if (check) {\n        body.password = await external_bcryptjs_default.a.hash(body.password, 5);\n        let user = new User({\n          username: body.username,\n          name: body.name,\n          password: body.password,\n          created: external_dayjs_default()().format('YYYY-MM-DD HH:mm:ss')\n        });\n        let result = await user.save();\n        ctx.body = {\n          code: 200,\n          data: result,\n          msg: '注册成功'\n        };\n        return;\n      }\n    } else {\n      // veevalidate 显示的错误\n      msg.code = ['验证码已经失效，请重新获取！'];\n    }\n\n    ctx.body = {\n      code: 500,\n      msg: msg\n    };\n  }\n\n}\n\n/* harmony default export */ var api_LoginController = (new LoginController_LoginController());\n// CONCATENATED MODULE: ./src/routes/loginRouter.js\n\n\nconst loginRouter_router = new external_koa_router_default.a();\nloginRouter_router.prefix('/login');\nloginRouter_router.post('/forget', api_LoginController.forget);\nloginRouter_router.post('/login', api_LoginController.login);\nloginRouter_router.post('/reg', api_LoginController.reg);\n/* harmony default export */ var loginRouter = (loginRouter_router);\n// CONCATENATED MODULE: ./src/model/SignRecord.js\n\n\nconst SignRecord_Schema = DBHelpler.Schema;\nconst SignRecordSchema = new SignRecord_Schema({\n  uid: {\n    type: String,\n    ref: 'users'\n  },\n  created: {\n    type: Date\n  },\n  favs: {\n    type: Number\n  },\n  lastSign: {\n    type: Date\n  }\n});\nSignRecordSchema.pre('save', function (next) {\n  this.created = external_dayjs_default()().format('YYYY-MM-DD HH:mm:ss');\n  next();\n});\nSignRecordSchema.statics = {\n  findByUid: function (uid) {\n    return this.findOne({\n      uid: uid\n    }).sort({\n      created: -1\n    });\n  }\n};\nconst SignRecord = DBHelpler.model('sign_record', SignRecordSchema);\n/* harmony default export */ var model_SignRecord = (SignRecord);\n// CONCATENATED MODULE: ./src/api/UserController.js\n\n\n\n\n\nclass UserController_UserController {\n  // 用户签到接口\n  async userSign(ctx) {\n    // 取用户ID\n    const obj = await getJWTPayload(ctx.header.authorization); // 查询用户上一次签到记录\n\n    const record = await model_SignRecord.findByUid(obj._id); // const user = await User.findById(obj._id)\n\n    let newRecord = {};\n    let result = ''; // 判断签到逻辑\n\n    if (record !== null) {// 有历史的签到数据\n      // 判断用户上一次签到记录的created时间是否与今天相同\n      // 如果相同，代表用户是在连续签到\n      // 如果当前时间的日期与用户上一次的签到日期相同，说明用户已经签到\n    } else {\n      // 无签到数据\n      await User.updateOne({\n        _id: obj._id\n      }, {\n        $set: {\n          count: 1\n        },\n        $inc: {\n          favs: 5\n        }\n      }); // 保存用户的签到记录\n\n      newRecord = new model_SignRecord({\n        uid: obj._id,\n        favs: 5,\n        lastSign: external_dayjs_default()().format('YYYY-MM-DD HH:mm:ss')\n      });\n      await newRecord.save();\n      result = {\n        favs: 5,\n        count: 1\n      };\n    }\n\n    ctx.body = {\n      code: 200,\n      msg: '请求成功',\n      ...result\n    };\n  }\n\n}\n\n/* harmony default export */ var api_UserController = (new UserController_UserController());\n// CONCATENATED MODULE: ./src/routes/userRouter.js\n\n\nconst userRouter_router = new external_koa_router_default.a();\nuserRouter_router.prefix('/user'); // 用户签到\n\nuserRouter_router.get('/fav', api_UserController.userSign);\n/* harmony default export */ var userRouter = (userRouter_router);\n// CONCATENATED MODULE: ./src/routes/routes.js\n\n\n\n\n/* harmony default export */ var routes = __webpack_exports__[\"a\"] = (external_koa_combine_routers_default()(publicRouter, loginRouter, userRouter));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///22\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(__dirname) {/* harmony import */ var koa__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);\n/* harmony import */ var koa__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(koa__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var koa_jwt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);\n/* harmony import */ var koa_jwt__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(koa_jwt__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var koa_helmet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9);\n/* harmony import */ var koa_helmet__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(koa_helmet__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var koa_static__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(10);\n/* harmony import */ var koa_static__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(koa_static__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _routes_routes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(22);\n/* harmony import */ var koa_body__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(16);\n/* harmony import */ var koa_body__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(koa_body__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var koa_json__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(17);\n/* harmony import */ var koa_json__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(koa_json__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _koa_cors__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(18);\n/* harmony import */ var _koa_cors__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_koa_cors__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var koa_compose__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(19);\n/* harmony import */ var koa_compose__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(koa_compose__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var koa_compress__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(20);\n/* harmony import */ var koa_compress__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(koa_compress__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _config_index__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(0);\n/* harmony import */ var _common_ErrorHandle__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(21);\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst app = new koa__WEBPACK_IMPORTED_MODULE_0___default.a();\nconst isDevMode =  false ? undefined : true; // 定义公共路径，不需要jwt鉴权\n\nconst jwt = koa_jwt__WEBPACK_IMPORTED_MODULE_1___default()({\n  secret: _config_index__WEBPACK_IMPORTED_MODULE_11__[/* default */ "a"].JWT_SECRET\n}).unless({\n  path: [/^\\/public/, /\\/login/]\n});\n/**\r\n * 使用koa-compose 集成中间件\r\n */\n\nconst middleware = koa_compose__WEBPACK_IMPORTED_MODULE_9___default()([koa_body__WEBPACK_IMPORTED_MODULE_6___default()(), koa_static__WEBPACK_IMPORTED_MODULE_4___default()(path__WEBPACK_IMPORTED_MODULE_2___default.a.join(__dirname, \'../public\')), _koa_cors__WEBPACK_IMPORTED_MODULE_8___default()(), koa_json__WEBPACK_IMPORTED_MODULE_7___default()({\n  pretty: false,\n  param: \'pretty\'\n}), koa_helmet__WEBPACK_IMPORTED_MODULE_3___default()(), _common_ErrorHandle__WEBPACK_IMPORTED_MODULE_12__[/* default */ "a"], jwt]);\n\nif (!isDevMode) {\n  app.use(koa_compress__WEBPACK_IMPORTED_MODULE_10___default()());\n}\n\napp.use(middleware);\napp.use(Object(_routes_routes__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"])());\napp.listen(3000);\n/* WEBPACK VAR INJECTION */}.call(this, "src"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/YjYzNSJdLCJuYW1lcyI6WyJhcHAiLCJrb2EiLCJpc0Rldk1vZGUiLCJwcm9jZXNzIiwiand0IiwiSldUIiwic2VjcmV0IiwiY29uZmlnIiwiSldUX1NFQ1JFVCIsInVubGVzcyIsInBhdGgiLCJtaWRkbGV3YXJlIiwiY29tcG9zZSIsImtvYUJvZHkiLCJzdGF0aWNzIiwiam9pbiIsIl9fZGlybmFtZSIsImNvcnMiLCJqc29udXRpbCIsInByZXR0eSIsInBhcmFtIiwiaGVsbWV0IiwiZXJyb3JIYW5kbGUiLCJ1c2UiLCJjb21wcmVzcyIsInJvdXRlciIsImxpc3RlbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxNQUFNQSxHQUFHLEdBQUcsSUFBSUMsMENBQUosRUFBWjtBQUVBLE1BQU1DLFNBQVMsR0FBR0MsTUFBQSxHQUF3QyxTQUF4QyxHQUFnRCxJQUFsRSxDLENBRUE7O0FBQ0EsTUFBTUMsR0FBRyxHQUFHQyw4Q0FBRyxDQUFDO0FBQUVDLFFBQU0sRUFBRUMsOERBQU0sQ0FBQ0M7QUFBakIsQ0FBRCxDQUFILENBQW1DQyxNQUFuQyxDQUEwQztBQUFFQyxNQUFJLEVBQUUsQ0FBQyxXQUFELEVBQWMsU0FBZDtBQUFSLENBQTFDLENBQVo7QUFFQTs7OztBQUdBLE1BQU1DLFVBQVUsR0FBR0Msa0RBQU8sQ0FBQyxDQUN6QkMsK0NBQU8sRUFEa0IsRUFFekJDLGlEQUFPLENBQUNKLDJDQUFJLENBQUNLLElBQUwsQ0FBVUMsU0FBVixFQUFxQixXQUFyQixDQUFELENBRmtCLEVBR3pCQyxnREFBSSxFQUhxQixFQUl6QkMsK0NBQVEsQ0FBQztBQUFFQyxRQUFNLEVBQUUsS0FBVjtBQUFpQkMsT0FBSyxFQUFFO0FBQXhCLENBQUQsQ0FKaUIsRUFLekJDLGlEQUFNLEVBTG1CLEVBTXpCQyxvRUFOeUIsRUFPekJsQixHQVB5QixDQUFELENBQTFCOztBQVVBLElBQUksQ0FBQ0YsU0FBTCxFQUFnQjtBQUNkRixLQUFHLENBQUN1QixHQUFKLENBQVFDLG9EQUFRLEVBQWhCO0FBQ0Q7O0FBRUR4QixHQUFHLENBQUN1QixHQUFKLENBQVFaLFVBQVI7QUFDQVgsR0FBRyxDQUFDdUIsR0FBSixDQUFRRSxzRUFBTSxFQUFkO0FBRUF6QixHQUFHLENBQUMwQixNQUFKLENBQVcsSUFBWCxFIiwiZmlsZSI6IjIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGtvYSBmcm9tICdrb2EnXHJcbmltcG9ydCBKV1QgZnJvbSAna29hLWp3dCdcclxuaW1wb3J0IHBhdGggZnJvbSAncGF0aCdcclxuaW1wb3J0IGhlbG1ldCBmcm9tICdrb2EtaGVsbWV0J1xyXG5pbXBvcnQgc3RhdGljcyBmcm9tICdrb2Etc3RhdGljJ1xyXG5pbXBvcnQgcm91dGVyIGZyb20gJy4vcm91dGVzL3JvdXRlcydcclxuaW1wb3J0IGtvYUJvZHkgZnJvbSAna29hLWJvZHknXHJcbmltcG9ydCBqc29udXRpbCBmcm9tICdrb2EtanNvbidcclxuaW1wb3J0IGNvcnMgZnJvbSAnQGtvYS9jb3JzJ1xyXG5pbXBvcnQgY29tcG9zZSBmcm9tICdrb2EtY29tcG9zZSdcclxuaW1wb3J0IGNvbXByZXNzIGZyb20gJ2tvYS1jb21wcmVzcydcclxuaW1wb3J0IGNvbmZpZyBmcm9tICcuL2NvbmZpZy9pbmRleCdcclxuaW1wb3J0IGVycm9ySGFuZGxlIGZyb20gJy4vY29tbW9uL0Vycm9ySGFuZGxlJ1xyXG5cclxuY29uc3QgYXBwID0gbmV3IGtvYSgpXHJcblxyXG5jb25zdCBpc0Rldk1vZGUgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nID8gZmFsc2UgOiB0cnVlXHJcblxyXG4vLyDlrprkuYnlhazlhbHot6/lvoTvvIzkuI3pnIDopoFqd3TpibTmnYNcclxuY29uc3Qgand0ID0gSldUKHsgc2VjcmV0OiBjb25maWcuSldUX1NFQ1JFVCB9KS51bmxlc3MoeyBwYXRoOiBbL15cXC9wdWJsaWMvLCAvXFwvbG9naW4vXSB9KVxyXG5cclxuLyoqXHJcbiAqIOS9v+eUqGtvYS1jb21wb3NlIOmbhuaIkOS4remXtOS7tlxyXG4gKi9cclxuY29uc3QgbWlkZGxld2FyZSA9IGNvbXBvc2UoW1xyXG4gIGtvYUJvZHkoKSxcclxuICBzdGF0aWNzKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi9wdWJsaWMnKSksXHJcbiAgY29ycygpLFxyXG4gIGpzb251dGlsKHsgcHJldHR5OiBmYWxzZSwgcGFyYW06ICdwcmV0dHknIH0pLFxyXG4gIGhlbG1ldCgpLFxyXG4gIGVycm9ySGFuZGxlLFxyXG4gIGp3dFxyXG5dKVxyXG5cclxuaWYgKCFpc0Rldk1vZGUpIHtcclxuICBhcHAudXNlKGNvbXByZXNzKCkpXHJcbn1cclxuXHJcbmFwcC51c2UobWlkZGxld2FyZSlcclxuYXBwLnVzZShyb3V0ZXIoKSlcclxuXHJcbmFwcC5saXN0ZW4oMzAwMClcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///23\n')}]);